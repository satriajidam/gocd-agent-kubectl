FROM alpine:3.8

LABEL gocd.version="18.8.0" \
  description="GoCD agent based on openjdk version 8u171" \
  maintainer="Agastyo Satriaji Idam <play.satriajidam@gmail.com>" \
  gocd.full.version="18.8.0-7433" \
  gocd.git.sha="75d1247f58ab8bcde3c5b43392a87347979f82c5" \
  docker.version="18.06.1-ce"

ADD https://github.com/krallin/tini/releases/download/v0.18.0/tini-static-amd64 /usr/local/sbin/tini
ADD https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64 /usr/local/sbin/gosu

# force encoding
ENV LANG=en_US.utf8

ARG UID=1000
ARG GID=1000

# kubectl version
ENV KUBE_LATEST_VERSION="v1.12.0"

# use uk alpine respository
RUN echo -e "https://uk.alpinelinux.org/alpine/v3.8/main\nhttps://uk.alpinelinux.org/alpine/v3.8/community" > /etc/apk/repositories

RUN \
  # add mode and permissions for files we added above
  chmod 0755 /usr/local/sbin/tini && \
  chown root:root /usr/local/sbin/tini && \
  chmod 0755 /usr/local/sbin/gosu && \
  chown root:root /usr/local/sbin/gosu && \
  # add our user and group first to make sure their IDs get assigned consistently,
  # regardless of whatever dependencies get added
  addgroup -g ${GID} go && \ 
  adduser -D -u ${UID} -s /bin/bash -G go go && \ 
  addgroup go root && \
  apk update --no-cache && \
  apk upgrade --no-cache && \
  apk add --update --no-cache \
    build-base \
    deps \
    make \
    gcc \
    musl-dev \
    libffi-dev && \
  apk add --update --no-cache openjdk8-jre-base git mercurial subversion openssh-client bash curl && \
  apk add --update --no-cache sudo sshpass openssh-client rsync && \
  apk add --update --no-cache python python-dev py-pip openssl openssl-dev ca-certificates && \
  # upgrade pip & dependencies
  pip install --upgrade pip && \
  # download kubectl
  curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && \
  chmod +x /usr/local/bin/kubectl && \
  # download the zip file
  curl --fail --location --silent --show-error "https://download.gocd.org/binaries/18.8.0-7433/generic/go-agent-18.8.0-7433.zip" > /tmp/go-agent.zip && \
  # unzip the zip file into /go-agent, after stripping the first path prefix
  unzip /tmp/go-agent.zip -d / && \
  mv go-agent-18.8.0 /go-agent && \
  rm /tmp/go-agent.zip && \
  mkdir -p /docker-entrypoint.d

# ensure that logs are printed to console output
COPY agent-bootstrapper-logback-include.xml /go-agent/config/agent-bootstrapper-logback-include.xml
COPY agent-launcher-logback-include.xml /go-agent/config/agent-launcher-logback-include.xml
COPY agent-logback-include.xml /go-agent/config/agent-logback-include.xml
COPY docker-entrypoint.sh /

ENTRYPOINT ["/docker-entrypoint.sh"]
